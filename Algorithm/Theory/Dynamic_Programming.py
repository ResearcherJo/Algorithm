'''
특정 범위까지의 값을 구하기 위해서 그것과 다른 범위까지의 값을 이용하여 효율적으로 값을 구하는 알고리즘 설계 기법이다.
조금 장난스럽게 말해서 답을 재활용하는 거다.
앞에서 구했던 답을 뒤에서도 이용하고, 옆에서도 이용하고...엄밀히 말해 동적 계획법은 구체적인 알고리즘이라기보다는 문제해결 패러다임에 가깝다. 
동적 계획법은 "어떤 문제를 풀기 위해 그 문제를 더 작은 문제의 연장선으로 생각하고, 과거에 구한 해를 활용하는" 방식의 알고리즘을 총칭한다.
'''


#피보나치 수열로 예시

#일반 재귀함수이용
def fibo(n):    

    if n <= 1:
        return 1
    else:
        return fibo(n-1)+fibo(n-2)
    

#다이나밀 프로그래밍 이용
memo = [0 for _ in range(100)] #메모이제이션 공간. 전역 변수이므로 0으로 초기화
def fibo(n):
    if n<=1: #0번째, 1번째 피보나치 수
        return n
    if memo[n]!=0: #메모가 있는지 확인(0으로 초기화되었으므로 0이 아니라면 메모가 쓰인 것임)
        return memo[n] #메모 리턴
    memo[n]=fibo(n-1) + fibo(n-2) #작은 문제로 분할
    return memo[n];
